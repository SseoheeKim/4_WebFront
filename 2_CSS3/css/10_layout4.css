.test{
    width: 70px;
    height: 70px;
    border: 1px solid black;
    background-color: rgba(255, 0, 0, 0.3);

    position: absolute; /* 기본 요소의 배치 순서를 무시하고 절대 위치를 가질 수 있게 설정 */
    left: 500px; /* 왼쪽에서부터 0px 떨어진 위치에 배치 */
    top: 250px; /* 위에서부터 0px 떨어진 위치에 배치 */
}


.container1{
    border:1px solid black;
    width: 300px;
    height: 300px;

    position: relative;
    /* 내부에 작성되는 요소에 상대적인 위치의 기준으로 설정 */
}

.container1 > div {
    box-sizing: border-box; 
    /* content + padding + border 의 합이 W/H와 같게 content비율 조절*/

    border: 1px solid black;
    border-radius: 50%;
}

.first{
    height: 300px;
    width: 300px;

    background-color: coral;

    position: absolute;

    top: 0px;
    left: 0px;

    /* z-index:10; */
}


.second{
    width: 200px;
    height: 200px;
    background-color: cyan;

    position: absolute;
    /* absolute 요소끼리 겹치는 경우, 나중에 해석되는 HTML요소가 위치에 해석된다. */

    top:50px;
    left:50px;
}


.third{
    width: 100px;
    height: 100px;
    background-color: white;

    position: absolute;

    top: 100px;
    left: 100px;
}




/* 요소를 정가운데 배치하기
 1) 
 2)
 3)
*/


/*감싸는 요소는  */
#center{ 
    width: 50px;
    height: 50px;
    position : fixed;
}


.fixed-area{
    border: 1px solid black;
    width: 120px;
    text-align: center;

    position: fiexd;
    /* absolute는 body, 감싸는 영역을 기준으로 배치
        fixed는 화면(브라우저, 뷰포트)을 기준으로 배치 */

    bottom:50px;
    right:50px;
}  


/* sticky */
#sticky-title{
    margin: 0; /* h1태그의 고유 margin삭제 */

    background-color: darkgrey;
    color: white;

    padding: 40px 20px 20px;

    position: sticky;
    top: -20px; /* 요소가 화면을 벗어났을 때 위쪽으로 -20px위치에 고정 */
    z-index: 100; /* absolute요소랑 겹치지 않도록 지정 */
}



